function convertPageToPDF() {
    // Get the main heading from <h1> or fallback to the document title
    let heading = document.querySelector('h1') 
                  ? document.querySelector('h1').innerText 
                  : document.title;
  
    // Replace invalid filename characters (like slashes or colons)
    heading = heading.replace(/[/\\?%*:|"<>]/g, '_');
  
    // Select only the main content to be converted (e.g., <article>)
    let content = document.querySelector('article') || document.body;
  
    // Clone the content to avoid modifying the actual webpage
    const clonedContent = content.cloneNode(true);
  
    // Remove any unwanted elements inside the cloned content (like sharing buttons, sidebars, etc.)
    const unwantedSelectors = ['.sidebar', '.menu', '.share-buttons', 'nav', 'footer', '.ads', '.comments'];
    unwantedSelectors.forEach(selector => {
      const unwantedElements = clonedContent.querySelectorAll(selector);
      unwantedElements.forEach(el => el.remove());
    });
  
    // Add custom styles for the PDF (formatting)
    const style = `
      <style>
        body { font-family: Arial, sans-serif; font-size: 14px; }
        h1, h2, h3, h4 { font-weight: bold; text-align: center; margin-top: 20px; }
        p { text-align: justify; line-height: 1.6; margin: 0; padding-bottom: 12px; }
        .pdf-header { font-size: 18px; text-align: center; margin-bottom: 20px; }
        .pdf-footer { position: fixed; bottom: 10px; left: 0; right: 0; text-align: center; font-size: 12px; color: gray; }
        @page { size: A4; margin: 20mm; }
        .section-break { margin: 40px 0; border-top: 2px solid #ccc; }
      </style>
    `;
  
    // Create a custom header and footer for the PDF
    const header = `<div class="pdf-header">${heading}</div>`;
    const footer = `<div class="pdf-footer">Generated by Web Article to PDF</div>`;
  
    // Insert header at the top of the cloned content
    clonedContent.insertAdjacentHTML('afterbegin', header);
  
    // Insert footer at the bottom of the cloned content
    clonedContent.insertAdjacentHTML('beforeend', footer);
  
    // Add a section break after each heading (optional for structured layout)
    clonedContent.querySelectorAll('h2, h3').forEach(heading => {
      const sectionBreak = document.createElement('div');
      sectionBreak.className = 'section-break';
      heading.insertAdjacentElement('beforebegin', sectionBreak);
    });
  
    // Generate the PDF with formatting options
    const options = {
      margin: 1,  // Adjust margins for better readability
      filename: heading + '.pdf',  // Use the heading as the filename
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'A4', orientation: 'portrait' }
    };
  
    // Convert the cloned content to PDF
    html2pdf().from(clonedContent).set(options).toPdf().get('pdf').then((pdf) => {
      // Add page numbers in the footer
      const totalPages = pdf.internal.getNumberOfPages();
      for (let i = 1; i <= totalPages; i++) {
        pdf.setPage(i);
        pdf.text(`Page ${i} of ${totalPages}`, pdf.internal.pageSize.getWidth() / 2, pdf.internal.pageSize.getHeight() - 10, { align: 'center' });
      }
    }).save();
  }
  
  // Run the function to convert the page to PDF
  convertPageToPDF();
  